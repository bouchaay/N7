#ifndef __JOB_H__
#define __JOB_H__

#include "readcmd.h"

#define MAX_JOBS 100
#define MAX_ARGS 100

typedef enum {ACTIF, SUSPENDU} statut;

typedef struct job {
    int UID;
    pid_t PID;
    pid_t PPID;
    statut STAT;
    char cmd[MAX_ARGS];
} job;

typedef struct Cellule {
    job *job;
    struct Cellule *suivant;
} Cellule;

typedef struct jobsTable {
    Cellule *tete;
    Cellule *queue;
} jobsTable;

void initialiser_jobTable(jobsTable *jt);
void ajouter_job(jobsTable *jt, int uid, pid_t pid, pid_t ppid, statut stat, char cmd[MAX_ARGS]);
void supprimer_job(jobsTable *jt, int uid);
void afficher_job(jobsTable *jt, int uid);
void afficher_jobs(jobsTable *jt);
void suspendre_job(jobsTable *jt, int uid);
void reprendre_job(jobsTable *jt, int uid);
void reprendre_job_en_arriere_plan(jobsTable *jt, int uid);
void reprendre_job_en_avant_plan(jobsTable *jt, int uid);

#endif /* __JOB_H__ */
